- name: Copy initial configuration file
  template:
    src: k8s-init-config.yaml
    dest: /etc/kubernetes/k8s-init-config.yaml

- name: Check if kubernetes config file exists
  stat:
    path: /etc/kubernetes/admin.conf
  register: stat_result

- name: Deploy kubernetes cluster if it was not deployed (base on presence of kubernetes config file)
  shell: kubeadm init --config /etc/kubernetes/k8s-init-config.yaml --upload-certs
  when: stat_result.stat.exists == False

- name: Copy Kubernetes config file (set owner and permissions)
  copy:
    remote_src: yes
    src: /etc/kubernetes/admin.conf
    dest: /home/operator/.kube/config
    owner: operator
    group: operator
    mode: '0600'

- name: Prepare command for joining control plane to cluster - 1
  shell: kubeadm init phase upload-certs --upload-certs | grep -v -e certificate
  register: command_output
- set_fact:
      join_cluster_cert: "{{ command_output.stdout }}"
- debug: msg="{{ join_cluster_cert }}"

- name: Prepare command for joining node to cluster - 2
  command: "kubeadm token create --print-join-command"
  register: command_output
- set_fact:
      join_cluster_command: "{{ command_output.stdout }}"
- debug: msg="{{ join_cluster_command }}"

- name: Register dummy host for storing command (joining control plane to cluster)
  add_host:
    name: "K8S_CONTROL_PLANE"
    join_cluster_control: "{{ join_cluster_command }} --control-plane --certificate-key {{ join_cluster_cert }}"
- debug: msg="{{ hostvars['K8S_CONTROL_PLANE']['join_cluster_control'] }}"

- name: Register dummy host for storing command (joining worker to cluster)
  add_host:
    name: "K8S_WORKER"
    join_cluster_worker: "{{ join_cluster_command }}"
- debug: msg="{{ hostvars['K8S_WORKER']['join_cluster_worker'] }}"  
